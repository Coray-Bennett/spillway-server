name: Docker Compose CI

on:
  push:
    branches: [ "main", "develop" ]
    paths:
      - 'spillway/**'
      - 'docker-compose.yml'
      - '.github/workflows/docker-compose-ci.yml'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'spillway/**'
      - 'docker-compose.yml'
      - '.github/workflows/docker-compose-ci.yml'

jobs:
  docker-compose-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Build Spring Boot application
      working-directory: ./spillway
      run: mvn clean package -DskipTests
    
    - name: Build and start services
      working-directory: ./spillway
      run: |
        docker compose build
        docker compose up -d
    
    - name: Wait for services to be healthy
      run: |
        echo "Waiting for MySQL to be ready..."
        timeout 60s bash -c 'until docker exec $(docker ps -q -f name=mysql) mysqladmin ping -h localhost -u root -proot --silent; do sleep 2; done'
        echo "MySQL is ready!"
        
        echo "Waiting for Spillway to be ready..."
        # Try to connect to the server port instead
        timeout 60s bash -c 'until nc -zv localhost 8081; do echo "Waiting for Spillway..."; sleep 2; done'
        
        # Give it a few more seconds for Spring Boot to fully initialize
        sleep 5
        echo "Spillway is ready!"
    
    - name: Check service logs
      if: always()
      working-directory: ./spillway
      run: |
        docker compose logs
    
    - name: Run basic API tests
      run: |
        # Check if the server is responding to a real endpoint
        echo "Testing auth endpoint..."
        response=$(curl -s -X POST http://localhost:8081/auth/login \
          -H "Content-Type: application/json" \
          -d '{"username":"test","password":"test"}' \
          -w "\n%{http_code}")
        
        http_code=$(echo "$response" | tail -n1)
        echo "HTTP Status: $http_code"
        
        # We expect a 401 (unauthorized) or 400 (bad request) since we're using invalid credentials
        if [[ "$http_code" == "401" || "$http_code" == "400" ]]; then
          echo "Auth endpoint is working correctly"
        else
          echo "Unexpected response from auth endpoint"
          echo "$response"
          exit 1
        fi
        
        # Test if we can access video metadata endpoint (should return 404 for non-existent video)
        echo "Testing video endpoint..."
        response=$(curl -s http://localhost:8081/video/test-id -w "\n%{http_code}")
        http_code=$(echo "$response" | tail -n1)
        echo "HTTP Status: $http_code"
        
        if [[ "$http_code" == "404" ]]; then
          echo "Video endpoint is working correctly"
        else
          echo "Unexpected response from video endpoint"
          echo "$response"
          exit 1
        fi
    
    - name: Stop services
      if: always()
      working-directory: ./spillway
      run: docker compose down -v