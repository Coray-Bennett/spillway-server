name: Docker Compose CI

on:
  push:
    branches: [ "main", "develop" ]
    paths:
      - 'spillway/**'
      - 'spillway/docker-compose.yml'
      - '.github/workflows/docker-compose-ci.yml'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'spillway/**'
      - 'spillway/docker-compose.yml'
      - '.github/workflows/docker-compose-ci.yml'

jobs:
  docker-compose-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Build Spring Boot application
      working-directory: ./spillway
      run: mvn clean package -DskipTests
    
    - name: Build and start services
      working-directory: ./spillway
      run: |
        docker compose build
        docker compose up -d
    
    - name: Wait for services to be healthy
      run: |
        echo "Waiting for MySQL to be ready..."
        timeout 60s bash -c 'until docker exec $(docker ps -q -f name=mysql) mysqladmin ping -h localhost -u root -proot --silent; do sleep 2; done'
        echo "MySQL is ready!"
        
        echo "Waiting for Spillway to be ready..."
        timeout 60s bash -c 'until curl -f http://localhost:8081/actuator/health 2>/dev/null; do sleep 2; done'
        echo "Spillway is ready!"
    
    - name: Check service logs
      if: always()
      run: |
        docker compose -f spillway/docker-compose.yml logs
    
    - name: Run basic API tests
      run: |
        # Test that the API is responding
        curl -f http://localhost:8081/actuator/health || exit 1
    
    - name: Stop services
      if: always()
      working-directory: ./spillway
      run: docker compose down -v