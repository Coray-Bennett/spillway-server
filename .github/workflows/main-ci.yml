name: Main CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  backend:
    uses: ./.github/workflows/backend-ci.yml
  
  frontend:
    uses: ./.github/workflows/frontend-ci.yml
  
  docker-compose:
    uses: ./.github/workflows/docker-compose-ci.yml
    needs: [backend]
  
  integration-tests:
    uses: ./.github/workflows/integration-tests.yml
    needs: [backend]
  
  release:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: [backend, frontend, docker-compose, integration-tests]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download backend artifact
      uses: actions/download-artifact@v4
      with:
        name: spillway-jar
        path: spillway/target/
    
    - name: Download frontend artifact
      uses: actions/download-artifact@v4
      with:
        name: frontend-build-20.x
        path: spillway-frontend/dist/
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      if: env.DOCKERHUB_USERNAME != ''
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
      env:
        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    
    - name: Build and push backend Docker image
      if: env.DOCKERHUB_USERNAME != ''
      uses: docker/build-push-action@v5
      with:
        context: ./spillway
        file: ./spillway/Dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/spillway:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/spillway:${{ github.sha }}
      env:
        DOCKERHUB_USERNAME: ${ secrets.DOCKERHUB_USERNAME }}
    
    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/heads/main')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          spillway/target/*.jar
        tag_name: v${{ github.run_number }}
        name: Release ${{ github.run_number }}
        draft: false
        prerelease: false